/// Referencing files so intellisense would work correctly
/// <reference path="../abstracts/_variables.scss" />
/// <reference path="../abstracts/_functions.scss" />
/// <reference path="../abstracts/_mixins.scss" />


/***************
     Checkbox
***************/
input[type=checkbox] {
    display: none;
}

input[type=checkbox] + label {
    display: block;
    cursor: pointer;
    position: relative;
    user-select: none;

    &:before {
        height: 20px;
        width: 20px;
        border: 1px solid $color-secondary;
        border-radius: 6px;
        background-color: transparent;
        margin-right: 8px;
        vertical-align: middle;
    }

    &:active:before {
        transform: scale(0);
    }

    &:before, &:after {
        content: '';
        display: inline-block;
        position: relative;
    }
}

input[type=checkbox]:checked + label:before {
    content: get-icon("check","color-secondary-light-3");
    color: $color-secondary-light-3;
    background: $color-primary;
    border-color: $color-primary;
    display: inline-block;
    line-height: 20px;
    text-align: center;
    padding: 0 2px;
}

input[type=checkbox]:disabled + label {
    opacity: .5;
    cursor: not-allowed;

    &:before {
        transform: scale(1);
        border-color: $color-secondary;
    }
}

input[type=checkbox]:checked:disabled + label {
    opacity: .5;
    cursor: not-allowed;

    &:before {
        transform: scale(1);
        background-color: $color-primary;
        border-color: $color-primary;
    }
}


/***************
     Switch
***************/
@mixin inactiveSwitchMixin {
    content: "";
    position: absolute;
    display: block;
}

// Toggle Switch
.switch-wrapper {
    position: relative;

    input {
        &.toggle-switch {
            opacity: 0;
            position: absolute;

            & + label {
                position: relative;
                display: inline-block;
                cursor: pointer;
                user-select: none;
                transition: .4s ease;
                height: 24px;
                width: 48px;
                border-radius: 60px;


                &:before {
                    @include inactiveSwitchMixin;
                    height: 24px;
                    width: 48px;
                    top: 0;
                    left: 0;
                    border-radius: 30px;
                    background: $color-secondary-light-1;
                    border: none;
                    transition: .2s cubic-bezier(.24, 0, .5, 1);
                }

                &:after {
                    @include inactiveSwitchMixin;
                    background: $color-text-light;
                    height: 19px;
                    width: 19px;
                    top: 2px;
                    left: 3px;
                    border: none;
                    border-radius: 60px;
                    transition: .35s cubic-bezier(.54, 1.60, .5, 1);
                }

                &:active:before {
                    transform: none;
                }
            }
            //Checked state
            &:checked {
                & + label:before {
                    background: $color-primary;
                    transition: width .2s cubic-bezier(0, 0, 0, .1);
                }

                & + label:after {
                    left: 48px - 22px;
                }
            }
        }
    }
}

/***************
 Radio buttons
***************/

.grid.horizontal-radio-wrapper {
    grid-column-gap: 0;
}

.horizontal-radio-wrapper {

    input[type=radio] {
        display: none;
    }

    input[type=radio]:checked + .box {
        background-color: $color-secondary;

        span {
            color: $color-text-light;

            &:before {
                transform: translateY(0px);
                content: get-icon("radio-button_checked","color-primary-light-2"); 
            }
        }
    }

    .box {
        width: 180px;
        height: 48px;
        background-color: $color-text-light;
        transition: all 250ms ease;
        will-change: transition;
        display: inline-block;
        text-align: center;
        cursor: pointer;
        position: relative;
        border: 1px solid;

        span {
            position: absolute;
            transform: translate(0, 12px);
            left: 0;
            right: 0;
            transition: all 300ms ease;
            user-select: none;
            color: $color-secondary;

            &:before {
                transition: all 300ms ease-in-out;
                position: absolute;
                left: 24px;
                top: 2px; 
                content: get-icon("radio-button_unchecked","color-secondary-light-2");
            }
        }
    }

    .right-radio {
        border-left: none;
    }
}